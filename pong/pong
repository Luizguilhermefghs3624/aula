import pygame
import sys
import random

# Inicializa o pygame
pygame.init()

# Configurações da tela
LARGURA_TELA = 800
ALTURA_TELA = 600
tela = pygame.display.set_mode((LARGURA_TELA, ALTURA_TELA))
pygame.display.set_caption("Pong Personalizado")

# Definindo cores
BRANCO = (255, 255, 255)
PRETO = (0, 0, 0)

# Propriedades das raquetes e da bola
LARGURA_RAQUETE = 10
ALTURA_RAQUETE = 100
RAQUETE_VELOCIDADE = 10
INICIAL_BOLA_VELOCIDADE = 5

# Carregar a imagem da mesa
def carregar_imagem_fundo(caminho):
    try:
        imagem = pygame.image.load(caminho)
        imagem = pygame.transform.scale(imagem, (LARGURA_TELA, ALTURA_TELA))  # Ajusta o tamanho da imagem
        return imagem
    except pygame.error as e:
        print(f"Erro ao carregar a imagem do fundo: {e}")
        return None

# Função para desenhar o fundo da mesa
def desenhar_fundo():
    tela.blit(imagem_fundo, (0, 0))  # Exibe a imagem de fundo na tela

# Classe Raquete
class Raquete:
    def __init__(self, x, y, tecla_up, tecla_down):
        self.rect = pygame.Rect(x, y, LARGURA_RAQUETE, ALTURA_RAQUETE)
        self.tecla_up = tecla_up
        self.tecla_down = tecla_down
    
    def mover(self):
        teclas = pygame.key.get_pressed()
        if teclas[self.tecla_up] and self.rect.top > 0:
            self.rect.y -= RAQUETE_VELOCIDADE
        if teclas[self.tecla_down] and self.rect.bottom < ALTURA_TELA:
            self.rect.y += RAQUETE_VELOCIDADE

    def mover_bot(self, bola, dificuldade):
        if dificuldade == 'facil':
            margem = 200
            if bola.rect.centery > self.rect.centery + self.rect.height / 2 + margem:
                self.rect.y += RAQUETE_VELOCIDADE * 0.5
            elif bola.rect.centery < self.rect.centery - self.rect.height / 2 - margem:
                self.rect.y -= RAQUETE_VELOCIDADE * 0.5
        elif dificuldade == 'medio':
            if bola.rect.centery > self.rect.centery + self.rect.height / 3:
                self.rect.y += RAQUETE_VELOCIDADE
            elif bola.rect.centery < self.rect.centery - self.rect.height / 3:
                self.rect.y -= RAQUETE_VELOCIDADE
        elif dificuldade == 'dificil':
            if bola.rect.centery > self.rect.centery:
                self.rect.y += RAQUETE_VELOCIDADE * 1.5
            elif bola.rect.centery < self.rect.centery:
                self.rect.y -= RAQUETE_VELOCIDADE * 1.5
        self._conter_borda()

    def _conter_borda(self):
        if self.rect.top < 0:
            self.rect.top = 0
        elif self.rect.bottom > ALTURA_TELA:
            self.rect.bottom = ALTURA_TELA

# Classe Bola
class Bola:
    def __init__(self):
        self.rect = pygame.Rect(LARGURA_TELA // 2 - 15, ALTURA_TELA // 2 - 15, 30, 30)
        self.velocidade_x = 0
        self.velocidade_y = 0
        self.iniciar = False

    def mover(self):
        if self.iniciar:
            self.rect.x += self.velocidade_x
            self.rect.y += self.velocidade_y

    def verificar_colisao_borda(self):
        if self.rect.top <= 0 or self.rect.bottom >= ALTURA_TELA:
            self.velocidade_y = -self.velocidade_y

    def verificar_colisao_raquete(self, raquete):
        if self.rect.colliderect(raquete.rect):
            self.velocidade_x = -self.velocidade_x

    def reiniciar(self):
        self.rect.x = LARGURA_TELA // 2 - 15
        self.rect.y = ALTURA_TELA // 2 - 15
        self.velocidade_x = 0
        self.velocidade_y = 0
        self.iniciar = False

    def iniciar_movement(self):
        self.velocidade_x = INICIAL_BOLA_VELOCIDADE
        self.velocidade_y = INICIAL_BOLA_VELOCIDADE
        self.iniciar = True
        if random.choice([True, False]):
            self.velocidade_x = -self.velocidade_x

# Função para desenhar a pontuação
def desenhar_pontuacao(pontuacao1, pontuacao2):
    fonte = pygame.font.Font(None, 74)
    texto_pontuacao1 = fonte.render(str(pontuacao1), True, BRANCO)
    texto_pontuacao2 = fonte.render(str(pontuacao2), True, BRANCO)
    tela.blit(texto_pontuacao1, (LARGURA_TELA // 4, 20))
    tela.blit(texto_pontuacao2, (LARGURA_TELA * 3 // 4 - texto_pontuacao2.get_width(), 20))

# Função para selecionar o modo de jogo
def selecionar_modo_jogo():
    fonte = pygame.font.Font(None, 74)
    texto = fonte.render("Escolha o modo de jogo", True, BRANCO)
    dois_jogadores = fonte.render("1: 2 Jogadores", True, BRANCO)
    um_jogador = fonte.render("2: 1 Jogador", True, BRANCO)
    tela.fill(PRETO)
    tela.blit(texto, (LARGURA_TELA // 4, ALTURA_TELA // 4))
    tela.blit(dois_jogadores, (LARGURA_TELA // 4, ALTURA_TELA // 2 - 50))
    tela.blit(um_jogador, (LARGURA_TELA // 4, ALTURA_TELA // 2 + 50))
    pygame.display.flip()

    while True:
        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif evento.type == pygame.KEYDOWN:
                if evento.key == pygame.K_1:
                    return 'dois_jogadores'
                elif evento.key == pygame.K_2:
                    return 'um_jogador'

# Função para selecionar a dificuldade
def tela_dificuldade():
    fonte = pygame.font.Font(None, 74)
    texto = fonte.render("Escolha a dificuldade", True, BRANCO)
    facil = fonte.render("1: Fácil", True, BRANCO)
    medio = fonte.render("2: Médio", True, BRANCO)
    dificil = fonte.render("3: Difícil", True, BRANCO)
    tela.fill(PRETO)
    tela.blit(texto, (LARGURA_TELA // 4, ALTURA_TELA // 4))
    tela.blit(facil, (LARGURA_TELA // 2 - 100, ALTURA_TELA // 2 - 50))
    tela.blit(medio, (LARGURA_TELA // 2 - 100, ALTURA_TELA // 2))
    tela.blit(dificil, (LARGURA_TELA // 2 - 100, ALTURA_TELA // 2 + 50))
    pygame.display.flip()

    while True:
        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif evento.type == pygame.KEYDOWN:
                if evento.key == pygame.K_1:
                    return 'facil'
                elif evento.key == pygame.K_2:
                    return 'medio'
                elif evento.key == pygame.K_3:
                    return 'dificil'

# Função para a tela de início
def tela_inicio():
    fonte = pygame.font.Font(None, 74)
    texto = fonte.render("Pressione Enter para começar", True, BRANCO)
    tela.fill(PRETO)
    tela.blit(texto, (LARGURA_TELA // 6, ALTURA_TELA // 2))
    pygame.display.flip()

    while True:
        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif evento.type == pygame.KEYDOWN:
                if evento.key == pygame.K_RETURN:
                    return

# Função para alternar entre modo janela e tela cheia
def alternar_tela_cheia():
    global tela, tela_cheia
    tela_cheia = not tela_cheia
    if tela_cheia:
        tela = pygame.display.set_mode((LARGURA_TELA, ALTURA_TELA), pygame.FULLSCREEN)
    else:
        tela = pygame.display.set_mode((LARGURA_TELA, ALTURA_TELA))

def main():
    global imagem_fundo, tela_cheia

    # Carregar a imagem de fundo
    imagem_fundo = carregar_imagem_fundo("mesa.jpg")
    if imagem_fundo is None:
        print("Erro ao carregar a imagem da mesa.")
        return

    tela_cheia = False  # Inicialmente, o jogo começa em modo janela

    tela_inicio()

    modo_jogo = selecionar_modo_jogo()
    print(f"Modo de jogo selecionado: {modo_jogo}")

    dificuldade = 'facil'  # padrão
    if modo_jogo == 'um_jogador':
        dificuldade = tela_dificuldade()
        print(f"Dificuldade selecionada: {dificuldade}")

    # Ajustar posições das raquetes
    raquete_jogador = Raquete(LARGURA_TELA - 30 - LARGURA_RAQUETE, ALTURA_TELA // 2 - ALTURA_RAQUETE // 2, pygame.K_UP, pygame.K_DOWN)
    raquete_bot = Raquete(30, ALTURA_TELA // 2 - ALTURA_RAQUETE // 2, pygame.K_w, pygame.K_s)
    bola = Bola()

    pontuacao_jogador = 0
    pontuacao_bot = 0

    bola.iniciar_movement()

    clock = pygame.time.Clock()

    while True:
        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif evento.type == pygame.KEYDOWN:
                if evento.key == pygame.K_f:  # Tecla 'f' para alternar tela cheia
                    alternar_tela_cheia()

        desenhar_fundo()
        raquete_jogador.mover()
        if modo_jogo == 'um_jogador':
            raquete_bot.mover_bot(bola, dificuldade)
        else:
            raquete_bot.mover()

        bola.mover()
        bola.verificar_colisao_borda()
        bola.verificar_colisao_raquete(raquete_jogador)
        bola.verificar_colisao_raquete(raquete_bot)

        if bola.rect.left <= 0:
            pontuacao_bot += 1
            bola.reiniciar()
            bola.iniciar_movement()
        if bola.rect.right >= LARGURA_TELA:
            pontuacao_jogador += 1
            bola.reiniciar()
            bola.iniciar_movement()

        desenhar_pontuacao(pontuacao_jogador, pontuacao_bot)

        pygame.draw.rect(tela, BRANCO, raquete_jogador.rect)
        pygame.draw.rect(tela, BRANCO, raquete_bot.rect)
        pygame.draw.ellipse(tela, BRANCO, bola.rect)

        pygame.display.flip()
        clock.tick(60)

if __name__ == "__main__":
    main()
